@using System.Text.Json;
@using PayDec.Shared.Model.Interfaces;
@using PayDec.Shared.Model;

@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">PayDec <i class="bi bi-credit-card"></i></a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <NavLink class="nav-link" href="Purchasesubmit">
            <i class="bi bi-cart-fill" style="color:white;"></i>
        </NavLink>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Purchase">
                <span class="bi bi-bag-fill" aria-hidden="true" style="width: 2rem;"></span> Purchase
            </NavLink>
        </div>
        @if (isAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Payment">
                <span class="bi bi-credit-card-2-back-fill" aria-hidden="true" style="width: 2rem;"></span> Payment
            </NavLink>
        </div>
        }
        @if (isAnonymous)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Login">
                   <span class="bi bi-info-circle-fill" aria-hidden="true" style="width: 2rem;"></span> Login
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Logout">
                    <span class="bi bi-info-circle-fill" aria-hidden="true" style="width: 2rem;"></span> Logout
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {

    [Inject]
    AuthenticationStateProvider AuthProvider { get; set; }

    private bool isAuthenticated { get; set; }

    private bool isAnonymous { get; set; }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private int ItemAmount { get; set; } = 0;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        string itemsAsJson = await localStorage.GetItemAsync<string>("ItemsToBuy");

        if(itemsAsJson != null)
        {
            var list = JsonSerializer.Deserialize<List<Tuple<Item, int>>>(itemsAsJson);
            ItemAmount = list?.Count() ?? 0;
        }

        var authState = await AuthProvider.GetAuthenticationStateAsync();

        string? authClaim = authState.User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Authentication)?.Value;
        string? anonymousClaim = authState.User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.Anonymous)?.Value;
        isAuthenticated =  authClaim == "Authenticated";
        isAnonymous =  anonymousClaim == "Anonymous";
    }


}
