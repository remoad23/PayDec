@using System.Text.Json;
@using PayDec.Shared.Model.Interfaces;

@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">PayDec <i class="bi bi-credit-card"></i></a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <NavLink class="nav-link" href="Purchasesubmit">
            <i class="bi bi-cart-fill" style="color:white;"></i>
            <i class="bi bi-@ItemAmount-circle-fill" style="color:white;"></i>
        </NavLink>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Purchase">
                <span class="bi bi-bag-fill" aria-hidden="true" style="width: 2rem;"></span> Purchase
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Payment">
                <span class="bi bi-credit-card-2-back-fill" aria-hidden="true" style="width: 2rem;"></span> Payment
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Login">
                <span class="bi bi-info-circle-fill" aria-hidden="true" style="width: 2rem;"></span> Login
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private int ItemAmount { get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected async Task OnInitializedAsync()
    {
        string itemsAsJson = await localStorage.GetItemAsync<string>("ItemsToBuy");
        var list = JsonSerializer.Deserialize<List<Tuple<IPDObject, int>>>(itemsAsJson);
        ItemAmount = list.Count();
    }
}
